name: "Setup Python 2"
description: "Installs Python 2.7.18 from official sources (builds on Linux, prebuilt on macOS, with caching and acceleration)"
author: "ralph@nyphon.de"

runs:
  using: "composite"
  steps:
    # 1Ô∏è‚É£ Define environment and cache key
    - name: Define environment
      id: env
      shell: bash
      run: |
        echo "os=$(uname -s)" >> $GITHUB_OUTPUT
        echo "arch=$(uname -m)" >> $GITHUB_OUTPUT
        echo "python-version=2.7.18" >> $GITHUB_OUTPUT

    # 2Ô∏è‚É£ Restore cached Python installation and ccache
    - name: Restore Python 2 + ccache
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/python2
          ~/.ccache
        key: python2-${{ steps.env.outputs.os }}-${{ steps.env.outputs.arch }}-${{ steps.env.outputs.python-version }}-${{ hashFiles('.github/actions/setup-python2/action.yml') }}

    # 3Ô∏è‚É£ Install build dependencies (Linux)
    - name: Install build dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential zlib1g-dev libssl-dev libbz2-dev \
          libreadline-dev libsqlite3-dev wget curl llvm \
          libncurses5-dev libncursesw5-dev xz-utils tk-dev \
          libffi-dev liblzma-dev ccache

    # 4Ô∏è‚É£ Install or build Python 2 only if cache not hit
    - name: Install or build Python 2.7.18
      if: steps.cache.outputs.cache-hit != 'true'
      id: install
      shell: bash
      run: |
        set -euo pipefail
        echo "üêç Installing Python 2.7.18..."

        ARCH="$(uname -m)"
        OS="$(uname -s)"
        INSTALL_DIR="/usr/local/python2"
        TMPDIR="$(mktemp -d)"
        PYTHON_VERSION="2.7.18"

        # Pre-create install directory with correct permissions
        sudo mkdir -p "$INSTALL_DIR"
        sudo chown -R "$(whoami)" "$INSTALL_DIR"

        if [[ "$OS" == "Linux" ]]; then
          echo "üêß Attempting fast prebuilt installation..."
          PREBUILT_URL="https://github.com/indygreg/python-build-standalone/releases/download/20200827/cpython-2.7.18-x86_64-unknown-linux-gnu-pgo-20200827T2030.tar.gz"
          if curl -fsSL "$PREBUILT_URL" -o "$TMPDIR/python.tar.gz"; then
            tar -xzf "$TMPDIR/python.tar.gz" -C "$INSTALL_DIR" --strip-components=1
            echo "‚úÖ Installed prebuilt Python 2.7.18"
          else
            echo "‚öôÔ∏è Prebuilt download failed, building from source..."
            cd "$TMPDIR"
            curl -fsSL "https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz" -o python.tgz
            tar -xzf python.tgz
            cd "Python-$PYTHON_VERSION"

            export PATH="/usr/lib/ccache:$PATH"
            ./configure --prefix="$INSTALL_DIR"
            make -j"$(nproc)" LDFLAGS="-Wl,--strip-all"
            make altinstall
          fi

          PYTHON_PATH="$INSTALL_DIR/bin/python2.7"
          sudo ln -sf "$PYTHON_PATH" /usr/local/bin/python

        elif [[ "$OS" == "Darwin" ]]; then
          echo "üçè Installing prebuilt Python $PYTHON_VERSION for macOS..."
          cd "$TMPDIR"
          curl -fsSL "https://www.python.org/ftp/python/$PYTHON_VERSION/python-$PYTHON_VERSION-macosx10.9.pkg" -o python.pkg
          sudo installer -pkg python.pkg -target /

          PYTHON_PATH="$(command -v python2 || true)"
          [[ -z "$PYTHON_PATH" ]] && PYTHON_PATH="/usr/local/bin/python2"
          sudo ln -sf "$PYTHON_PATH" /usr/local/bin/python

        else
          echo "‚ùå Unsupported OS: $OS"
          exit 1
        fi

        echo "‚úÖ Verifying installation..."
        python --version || (echo "‚ö†Ô∏è Python not found in PATH" && exit 1)

        echo "python-path=$PYTHON_PATH" >> $GITHUB_OUTPUT
        echo "üéâ Installed Python 2.7.18 successfully!"

    # 5Ô∏è‚É£ Verify even when cache was used
    - name: Verify Python installation
      shell: bash
      run: |
        echo "‚úÖ Verifying cached/built Python installation..."
        sudo ln -sf /usr/local/python2/bin/python2.7 /usr/local/bin/python || true
        python --version || (echo "‚ùå Python installation failed" && exit 1)
