---
name: Deploy Screeps AI

on:
  workflow_run:
    workflows: ["Post Merge Release"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (leave empty for current version)'
        required: false
        type: string
permissions:
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if workflow_run was successful or if manually triggered
    if: >-
      github.event_name == 'workflow_dispatch' ||
      github.event.workflow_run.conclusion == 'success'
    # Use GitHub environment for deployment protection rules
    environment:
      name: production
      url: https://screeps.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        shell: bash
        run: |
          # Extract version from different event types
          if [ -n "${{ inputs.version }}" ]; then
            VERSION="${{ inputs.version }}"
            echo "::notice::Deploying manually specified version $VERSION"
          elif [ "${{ github.event_name }}" = "workflow_run" ]; then
            # Extract version from the latest tag on main branch
            git fetch --tags
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [ -z "$VERSION" ]; then
              # Fallback to package.json version
              VERSION="v$(grep '"version"' package.json | head -1 | \
                sed 's/.*: "\(.*\)".*/\1/')"
            fi
            echo "::notice::Deploying version $VERSION from workflow_run event"
          else
            # Fallback to package.json version for manual dispatch
            VERSION="v$(grep '"version"' package.json | head -1 | \
              sed 's/.*: "\(.*\)".*/\1/')"
            echo "::notice::Deploying package.json version $VERSION"
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.1
      - name: Install dependencies
        run: bun install --no-optional
      - name: Cache build output
        id: cache-build
        uses: actions/cache@v4
        with:
          path: dist
          key: >-
            build-${{ runner.os }}-${{ hashFiles('src/**/*',
            'scripts/build.ts', 'tsconfig.json', 'bun.lock') }}
          restore-keys: |
            build-${{ runner.os }}-
      - name: Build and deploy
        id: deploy
        env:
          SCREEPS_TOKEN: ${{ secrets.SCREEPS_TOKEN }}
          SCREEPS_HOST: ${{ vars.SCREEPS_HOST }}
          SCREEPS_PORT: ${{ vars.SCREEPS_PORT }}
          SCREEPS_PROTOCOL: ${{ vars.SCREEPS_PROTOCOL }}
          SCREEPS_BRANCH: ${{ vars.SCREEPS_BRANCH }}
          SCREEPS_PATH: ${{ vars.SCREEPS_PATH }}
        run: bun run deploy

      - name: Notify deployment success
        if: success()
        uses: ./.github/actions/send-push-notification
        with:
          push-token: ${{ secrets.PUSH_TOKEN }}
          title: "Screeps Deployment Success"
          body: >-
            Version ${{ steps.get_version.outputs.version }} deployed
            successfully to production
          link: >-
            https://github.com/${{ github.repository }}/actions/runs/${{
            github.run_id }}
          priority: "3"

      - name: Check spawn status and auto-respawn
        if: success()
        id: autospawn
        uses: ./.github/actions/screeps-autospawner
        with:
          screeps-token: ${{ secrets.SCREEPS_TOKEN }}
          screeps-host: ${{ vars.SCREEPS_HOST }}
          screeps-port: ${{ vars.SCREEPS_PORT }}
          screeps-protocol: ${{ vars.SCREEPS_PROTOCOL }}
          screeps-path: ${{ vars.SCREEPS_PATH }}

      - name: Notify deployment failure
        if: failure()
        uses: ./.github/actions/send-push-notification
        with:
          push-token: ${{ secrets.PUSH_TOKEN }}
          title: "Screeps Deployment Failed"
          body: >-
            Version ${{ steps.get_version.outputs.version }} deployment
            failed - immediate attention required
          link: >-
            https://github.com/${{ github.repository }}/actions/runs/${{
            github.run_id }}
          priority: "5"
