name: Post Merge Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python 2
        uses: ./.github/actions/setup-python2
      - name: Setup Node.js 16
        uses: ./.github/actions/setup-node16
      - name: Export Python path for node-gyp
        shell: bash
        run: |
          echo "GYP_DEFINES=standalone_static_library=0" >> $GITHUB_ENV
          echo "PYTHON=$(command -v python2 || command -v python)" >> $GITHUB_ENV
          python --version
      - name: Install dependencies (with Python 2)
        run: npm install
      - name: Lint with fixes
        run: npm run lint:fix
      - name: Format with write
        run: npm run format:write
      - name: Bump version
        id: bump
        run: |
          VERSION=$(npm run version:bump | tail -n 1)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Refresh version index
        run: npm run versions:update
      - name: Commit changes
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: prepare release ${{ steps.bump.outputs.version }}"
      - name: Create tag
        if: steps.bump.outputs.version != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ steps.bump.outputs.version }}';
            const sha = '${{ steps.commit.outputs.commit_hash || github.sha }}';
            const ref = `refs/tags/v${version}`;
            try {
              await github.rest.git.getRef({ owner: context.repo.owner, repo: context.repo.repo, ref });
              core.info(`Tag ${ref} already exists`);
            } catch (error) {
              if (error.status !== 404) throw error;
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref,
                sha,
              });
            }
