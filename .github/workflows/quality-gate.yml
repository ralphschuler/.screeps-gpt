name: Quality Gate

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  checks:
    runs-on: ubuntu-latest
    env:
      SCREEPS_TEST_REALM: PTR
      SCREEPS_HOST: ptr.screeps.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python 2
        uses: ./.github/actions/setup-python2
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Export Python path for node-gyp
        shell: bash
        run: |
          echo "GYP_DEFINES=standalone_static_library=0" >> $GITHUB_ENV
          echo "PYTHON=$(command -v python2 || command -v python)" >> $GITHUB_ENV
          python --version
      - name: Install dependencies (with Python 2)
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Format (check)
        run: npm run format:check
      - name: Validate version index
        run: |
          npm run versions:update
          if ! git diff --quiet docs/changelog/versions.json docs/changelog/versions.md; then
            echo "::error::Release index is out of date. Run 'npm run versions:update' locally and commit the changes." >&2
            git diff -- docs/changelog/versions.json docs/changelog/versions.md
            exit 1
          fi
      - name: Unit tests
        run: npm run test:unit
      - name: End-to-end tests (PTR)
        run: npm run test:e2e
      - name: Regression tests
        run: npm run test:regression
      - name: Coverage
        run: npm run test:coverage
      - name: Publish evaluation report artifact
        if: success()
        run: |
          npm run analyze:system
          tar -czf reports.tar.gz reports || echo "no reports directory"
      - name: Upload report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: system-evaluation
          path: reports.tar.gz

      - name: Notify build failure
        if: failure()
        uses: ./.github/actions/send-push-notification
        with:
          push-token: ${{ secrets.PUSH_TOKEN }}
          title: "Quality Gate Failed"
          body: "PR #${{ github.event.pull_request.number }} build failed - review required"
          link: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          priority: "4"
