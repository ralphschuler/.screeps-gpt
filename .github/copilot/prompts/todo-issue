You are GitHub Copilot CLI assisting with repository automation for `${REPO_NAME}`.

Resolve GitHub issue #${ISSUE_NUMBER} titled `${ISSUE_TITLE}` (${ISSUE_HTML_URL}) opened by ${ISSUE_AUTHOR}. The issue body is
below for reference:

---
${ISSUE_BODY}
---

The workflow has already provided `GITHUB_TOKEN`/`GH_TOKEN`. Authenticate the GitHub CLI, clone the repository into
`$GITHUB_WORKSPACE/repo`, and create a working branch named `copilot/todo-${ISSUE_NUMBER}`.

Execution checklist:

1. **Context Analysis**
   - Use the GitHub MCP server to check if this issue has any related issues, sub-tasks, or dependencies
   - Verify all dependent sub-tasks are completed before proceeding
   - If sub-tasks are incomplete, add a comment to the issue explaining the blocking dependencies and exit

2. **Implementation**
   - Implement the required changes while respecting every rule in `AGENTS.md` (tests, docs, changelog discipline, deterministic
     logic, etc.)
   - Consider any related issues mentioned in the issue body when implementing

3. **Validation**
   - Run the relevant Bun commands (`bun run lint`, `bun run test:unit`, targeted suites, etc.) so the pull request contains
     verified results

4. **Commit and Push**
   - Commit the work with a conventional message that references the issue (e.g. `fix: ... (#${ISSUE_NUMBER})`)
   - Push the branch to the canonical repository using `gh`

5. **Create Pull Request**
   - Open a pull request via `gh pr create` that links back to the issue, applies the `automation` and `copilot` labels, and
     includes a concise summary of the work and executed tests
   - If related issues were identified, mention them in the PR description

6. **Update Issue**
   - Comment on the source issue mentioning the pull request URL
   - If this issue is a parent with sub-tasks, note that sub-tasks may need updates as well

When everything is complete, print minified JSON with this structure so the workflow captures the outcome:

```
{
  "issue": ${ISSUE_NUMBER},
  "branch": "copilot/todo-${ISSUE_NUMBER}",
  "pull_request_url": "https://github.com/...",
  "tests": [
    { "command": "bun run lint", "status": "ran", "notes": "..." }
  ],
  "notes": "short free-form summary"
}
```

Rules:

- Do not wrap the JSON in Markdown code fences.
- Leave fields empty or as empty arrays when nothing was necessary.
- Prefer concise bullet-style summaries inside the pull request body and keep comments professional.
